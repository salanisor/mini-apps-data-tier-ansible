---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: data-tier
  namespace: {{ dt_namespace }}
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: data-tier
  serviceName: data-tier
  template:
    metadata:
      name: data-tier
      labels:
        name: data-tier
    spec:
      serviceAccountName: data-tier

      # We must have a 'core' node
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: informaticsmatters.com/purpose
                operator: In
                values:
                - core

      # To access the mounted data volume
      # we set the security context's fsGroup
      # to the group that will be using the volume.
      # In this case it's the `madt` group in the container
      # (obtained empirically)
      securityContext:
        fsGroup: 1000

      containers:
      - name: data-tier
        image: {{ dt_image_registry }}/{{ dt_image_name }}:{{ dt_image_tag }}
{% if dt_image_tag in ['latest', 'stable'] %}
        imagePullPolicy: Always
{% else %}
        imagePullPolicy: IfNotPresent
{% endif %}
        terminationMessagePolicy: FallbackToLogsOnError
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: REQUIRED_ROLE
          value: {{ dt_required_role }}
        - name: DT_DATABASE_HOST
          value: database.{{ dt_namespace }}.svc
        - name: DT_SQLALCHEMY_DATABASE_URI
          value: postgresql://datatier:{{ dt_database_data_tier_user_password_fact }}@database.{{ dt_namespace }}.svc:5432/datatier
        - name: DT_SENTRY_DSN
          value: '{{ dt_sentry_dsn }}'
        - name: DT_API_HOSTNAME
          value: '{{ dt_hostname }}'
        # CICD_TRIGGER_ID is variable whose value is used to force
        # a redeployment of the underlying containers. This is used in
        # situations where the origin image's tag may not have changed
        # (e.g. it's 'latest' or 'stable') but a new build is expected to
        # be available. Without changing something in the Deployment spec
        # a roll-out will not occur if the tag has not changed.
        - name: CICD_TRIGGER_ID
          value: '{{ ansible_date_time.iso8601_micro }}'
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 15
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 3
          periodSeconds: 60
          successThreshold: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: {{ dt_cpu_request }}
            memory: {{ dt_mem_request }}
{% if dt_cpu_limit or dt_mem_limit %}
          limits:
{% if dt_cpu_limit %}
            cpu: {{ dt_cpu_limit }}
{% endif %}
{% if dt_mem_limit %}
            memory: {{ dt_mem_limit }}
{% endif %}
{% endif %}
        volumeMounts:
        - mountPath: /data
          name: data

      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data

      imagePullSecrets:
      - name: data-tier
